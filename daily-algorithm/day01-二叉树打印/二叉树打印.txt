1.二叉树按层遍历
要求换行
难点：何时换行
思路：用两个变量last，nlast，last为当前行的最右节点，nlast为下一行的最右节点
当遇到last时，输出换行，同时last和nlast更新
难点变为找到last和nlast

1.初始化时，last=1，把1放入队列；
2.将1出队，把1的子孩子2,3放入队列，更新nlast=3；
3.nlast更新完之后，打印上一次出队的1，并和last比较，如果相同就打印换行，并更新last=nlast=3;
4.将2出队，把2的子孩子4放入队列，更新nlast=4;
5.nlast更新完以后，打印上一次出队的2，并和last（3）比较，不相同，continue；
6.将3出队，将3的子孩子5，6放入队列，更新nlast=6;
7.nlast更新完以后，打印上一次出队的3，并和last（3）比较， 相同就打印换行，并更新last=nlast=6;
…………
总结就是如下循环：（初始化last=根节点）
1.将A出队，并将A的子孩子入队，更新nlast=A最后入队的子孩子；
2.打印上次出队的家伙A，并和last比较， 如果相同就打印换行，并更新last=nlast，如果不相同，则continue
C/C++:

python:


2.二叉树序列化与反序列化（二叉树与字符串的转换）先序，中序，后序，按层
按层实现时用队列
